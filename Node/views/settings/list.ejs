<%- include('head.ejs') %>

<% 
    showIsDefault  = data.baseUrl.indexOf('search-engine') > 0;
%> 

<input id="view-data" type="hidden" value="<%= JSON.stringify(data) %>" />

<div class="top-row">
    <span class="title">
        <span class="<%= data.icon %>"></span>
        <%= data.title %>
    </span>
</div>

<% if( data.description) { %>
    <div class="page-description"><%= data.description %></div>
<% } %>

<div class="list" x-data="List">
    <div class="list-toolbar">
        <a @click="addGroup" href="<%= data.baseUrl %>/new">
            <span class="fa-solid fa-plus"></span>
            Add
        </a>
    </div>
    <%- include('./generic-list.ejs') %>
</div>



<script>

    document.addEventListener('alpine:init', () => {
        let data = JSON.parse(document.getElementById('view-data').value);
        let typeName = data.typeName || 'item';
        let baseUrl = data.baseUrl;

        Alpine.data('List', () => ({
            model: data,
            remove(item) {
                console.log('removing', item);
                confirmPrompt(`Are you sure you want to delete the ${typeName} "${item.Name}"?`).then(() => 
                {
                    fetch(`${baseUrl}/${encodeURIComponent(item.Uid)}`, { method: 'DELETE'}).then(async (res)=>{
                        if(!res.ok)
                            throw await res.text();
                        document.getElementById(item.Uid).remove(); 
                        toast(`Successfully deleted item`, true);
                    }).catch(err => {
                        toast(err || 'Failed to delete', false);
                    });
                }).catch(err => {});
            },
            setStatus(uid, enabled)
            {
                fetch(`${baseUrl}/${encodeURIComponent(uid)}/status/${(enabled === true)}`, { method: 'POST'}).then(async (res) =>{
                    if(!res.ok)
                        throw await res.text();
                    toast(`Successfully ${enabled ? 'enable' : 'disable'} item`, true);
                }).catch(err => {
                    toast(err || `Failed to ${enabled ? 'enable' : 'disable'} item`, false);
                });
            },
            setDefault(uid, checked){
                // unselect any other defaults
                for(let tr of document.querySelectorAll('.generic-list tr')){
                    if(tr.getAttribute('id') === uid)
                        continue;
                    let eleIsDefault = tr.querySelector('.default.switch input');
                    if(!eleIsDefault)
                        continue;
                    eleIsDefault.checked = false;
                }
                fetch(`${baseUrl}/${encodeURIComponent(uid)}/default/${checked === true}`, { method: 'POST'}).then(async (res) =>{
                    if(!res.ok)
                        throw await res.text();
                    if(checked === true)
                        toast(`Successfully set item as default`, true);
                    else
                        toast(`Successfully unset item as default`, true);
                }).catch(err => {
                    toast(err || `Failed to update item`, false);
                });
            }            
        }))
    });
</script>

<%- include('foot.ejs') %>