<% 
    if(typeof(dashboards) === 'undefined' || !dashboards)
        dashboards = [];
%> 

<div x-data="ItemEditor">
    <template x-if="Opened">
        <div>
            <div class="side-editor-background"></div>
            <div class="settings-box side-editor">
                <div class="header">
                    <span class="title" x-text="EditorTitle"></span>
                    <div class="buttons">
                        <template x-if="AddingItem">
                            <div class="keep-open">
                                <span>Keep Open</span>
                                <label x:for="KeepOpen" class="toggle-switchy">
                                    <input @change="itemChange" :disabled="isDisabled()" type="checkbox" :id="KeepOpen" x-model="KeepOpen"  @keydown.enter="save" />
                                    <span class="toggle">
                                        <span class="switch"></span>
                                    </span>
                                </label>
                            </div>
                        </template>
                        <button :disabled="isDisabled()" class="btn" @click="save">Save</button>
                        <button :disabled="isDisabled()" class="btn" @click="close">Cancel</button>
                    </div>
                </div>
                <div class="content">
                    <div class="tabs">
                        <div class="tab-buttons">
                            <button :class="{ 'btn': true, 'active': !activeTab || activeTab == 'General'}" x-tab="General" @click="changeTab">General</button>
                            <template x-if="EditorApp.Properties?.length > 0">
                                <button :class="{ 'btn': true, 'active': activeTab === 'Properties'}" x-tab="Properties" @click="changeTab">Properties</button>
                            </template>
                            <template x-if="model._Type !== 'Dashboard' && (model._Type !== 'DashboardTerminal' || model.TerminalType === 'SSH')">
                                <button :class="{ 'btn': true, 'active': activeTab === 'SSH'}" x-tab="SSH" @click="changeTab">SSH</button>
                            </template>
                            <% if(docker?.length) { %>
                            <template x-if="model._Type !== 'Dashboard' && (model._Type !== 'DashboardTerminal' || model.TerminalType === 'Docker')">
                                <button :class="{ 'btn': true, 'active': activeTab === 'Docker'}" x-tab="Docker" @click="changeTab">Docker</button>
                            </template>
                            <% } %>
                            <template x-if="EditorApp.Info != null">
                                <button :class="{ 'btn': true, 'active': activeTab === 'Info'}" x-tab="Info" @click="changeTab">Info</button>
                            </template>
                        </div>
                        <div :class="{ 'tabpage': true, 'active': !activeTab || activeTab == 'General'}" id="tab-General">
                            <div class="setting">
                                <span class="label">Type</span>
                                <span class="value">
                                    <select :disabled="isDisabled()" x-model="model._Type" @change="typeChanged"  @keydown.enter="save">
                                        <option value="DashboardApp">App</option>
                                        <option value="DashboardLink">Link</option>
                                        <option value="Dashboard">Dashboard</option>
                                        <option value="DashboardTerminal">Terminal</option>
                                    </select>
                                </span>
                            </div> 
                            <template x-if="model._Type == 'DashboardApp'">
                                <div class="setting">
                                    <span class="label">App</span>
                                    <span class="value">
                                        <select :disabled="isDisabled()" x-model="model.AppName" @change="appChanged" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="save">
                                            <option value="" disabled>Select An App</option>                            
                                            <optgroup label="Smart">
                                                <% for(let app of apps.filter(x => x.Interval)) { %>
                                                    <option><%= app.Name %></option>
                                                <% } %>
                                            </optgroup>
                                            <optgroup label="Basic">
                                                <% for(let app of apps.filter(x => !x.Interval)) { %>
                                                    <option><%= app.Name %></option>
                                                <% } %>
                                            </optgroup>
                                        </select>
                                    </span>
                                </div>
                            </template>
                            <template x-if="model._Type === 'Dashboard'">
                                <div class="setting">
                                    <span class="label">Dashboard</span>
                                    <span class="value">                                
                                        <select :disabled="isDisabled()" x-model="model.Url" @keydown.enter="save" data-rules='["required"]'>
                                            <% for(let dashboard of dashboards) { %>
                                                <option value="<%= dashboard.Uid %>"><%= dashboard.Name %></option>
                                            <% } %>
                                        </select>
                                    </span>
                                </div>
                            </template>
                            <template x-if="model._Type === 'DashboardTerminal'">
                                <div class="setting">
                                    <span class="label">Type</span>
                                    <span class="value">                                
                                        <select :disabled="isDisabled()" x-model="model.TerminalType" @keydown.enter="save">
                                            <% if(docker?.length) { %>
                                            <option value="Docker">Docker</option>
                                            <% } %>
                                            <option value="SSH">SSH</option>
                                        </select>
                                    </span>
                                </div>
                            </template>
                            <template x-if="model._Type != 'Dashboard'">
                                <div class="setting">
                                    <span class="label">Name</span>
                                    <span class="value">
                                        <input :disabled="isDisabled()" type="text" x-model="model.Name" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="save">
                                    </span>
                                </div>
                            </template>
                            <template x-if="model._Type != 'Dashboard' && model._Type != 'DashboardTerminal'">                    
                                <div class="setting">
                                    <span class="label">Target</span>
                                    <span class="value">
                                        <select :disabled="isDisabled()" x-model="model.Target" @keydown.enter="save">
                                            <option value="">Default</option>
                                            <option value="IFrame">IFrame</option>
                                        </select>
                                    </span>
                                </div> 
                            </template>
                            <template x-if="model._Type != 'Dashboard' && model._Type != 'DashboardTerminal'">
                                <div class="setting">
                                    <span class="label">URL</span>
                                    <span class="value">
                                        <input :disabled="isDisabled()" type="text" x-model="model.Url" data-rules='["required", "regexMatch:^[^:]+://."]' @blur="blur" @input="input"  @keydown.enter="save" />
                                    </span>
                                </div> 
                            </template>
                            <div class="setting">
                                <span class="label">Size</span>
                                <span class="value">
                                    <select @change="itemChange" :disabled="isDisabled()" x-model="model.Size" @keydown.enter="save">
                                        <option value="small">Small</option>
                                        <option value="medium">Medium</option>
                                        <option value="large">Large</option>
                                        <option value="larger">Larger</option>
                                        <option value="x-large">X-Large</option>
                                        <option value="xx-large">XX-Large</option>
                                    </select>
                                </span>
                            </div> 
                            <div class="setting">
                                <span class="label">Icon</span>
                                <span class="value">
                                    <div class="item-icon-picker">
                                        <!-- Show the image -->
                                        <template x-if="model.Icon">
                                            <a :class="{'db-item':true, 'db-link': model._Type === 'DashboardLink', 'db-basic': !EditorApp.Carousel, 'db-app': model._Type === 'DashboardApp',
                                            'small': model.Size === 'small', 'medium': model.Size === 'medium', 'large': model.Size === 'large', 
                                            'x-large': model.Size === 'x-large','larger': model.Size === 'larger', 'xx-large': model.Size === 'xx-large', 'carousel': EditorApp.Carousel && model.Size.indexOf('large') >= 0}" >
                                                <div class="inner">
                                                    <div class="icon">
                                                        <img :src="model.Icon" class="icon-pick">
                                                    </div>
                                                    <div class="content">
                                                        <div class="title" x-text="model.Name"></div>
                                                        <template x-if="!EditorApp.Carousel || model.Size.indexOf('large') < 0">
                                                            <div class="status">
                                                                <ul class="livestats">
                                                                    <li><span class="title">Sample</span><span class="value">1234</span></li>
                                                                    <li><span class="title">Other</span><span class="value">5657</span></li>
                                                                </ul>
                                                            </div>
                                                        </template>
                                                        <template x-if="EditorApp.Carousel && model.Size.indexOf('large') >= 0">
                                                            <div class="status">
                                                                <div class="carousel">
                                                                    <div class="item visible">
                                                                        <div class="fill" style="background:#333">
                                                                            <div class="name tr">Sample item</div>
                                                                            <div class="br">2010</div>
                                                                            <a class="app-icon"><img :src="model.Icon"></a>
                                                                        </div>
                                                                    </div>
                                                                    <div class="controls">
                                                                        <a></a><a></a><a></a><a></a><a></a><a></a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </template>
                                                    </div>
                                                    <div class="arrow"></div>
                                                </div>
                                            </a>
                                            
                                        </template>

                                        <!-- Show the gray box when image is not available -->
                                        <template x-if="!model.Icon">
                                            <div class="no-image"></div>
                                        </template>

                                        <!-- Image file selector -->
                                        <button class="btn" id="file-chooser-btn" onclick="document.getElementById('file-chooser').click()">
                                            Browse...
                                        </button>
                                        <input style="display:none" id="file-chooser" class="file-chooser" type="file" accept="image/*" @change="imageChosen">

                                    </div>
                                </span>
                            </div>
                        </div>
                        <template x-if="EditorApp.Properties?.length > 0">
                            <div :class="{ 'tabpage': true, 'active': activeTab == 'Properties'}">
                                
                                <template x-if="EditorApp?.Interval || EditorApp?.Interval === -1">                
                                    <div class="setting">
                                        <span class="label">API URL</span>
                                        <span class="value">
                                            <input :disabled="isDisabled()" type="text" x-model="model.ApiUrl" data-rules='["regexMatch:^($|((http(s)?)|(HTTP(S)?))://.)"]' @blur="blur" @input="input"  @keydown.enter="save" :placeholder="model.Url" />
                                            <span class="help-text">Optional URL to use to contact the API if different that the URL above.<br/>The main URL will be where the user is taken when the item is clicked.</span>
                                        </span>
                                    </div> 
                                </template>

                                <template x-for="prop in EditorApp.Properties">     
                                    <template x-if="prop.Name && ifValue(prop.IfValue)">
                                        <div class="setting">
                                            <span class="label" x-text="prop.Name"></span>
                                            <span class="value">
                                                <template x-if="prop.Type.toLowerCase() === 'string'">
                                                    <input @change="itemChange" :disabled="isDisabled()" type="text" x-model="model.Properties[prop.Id]"  @keydown.enter="save" />
                                                </template>
                                                <template x-if="prop.Type.toLowerCase() === 'password'">
                                                    <input @change="itemChange" type="password" x-model="model.Properties[prop.Id]"  @keydown.enter="save" />
                                                </template>
                                                <template x-if="prop.Type.toLowerCase() === 'int'">
                                                    <input @change="itemChange" :disabled="isDisabled()" type="number" x-model.number="model.Properties[prop.Id]"  @keydown.enter="save" />
                                                </template>
                                                <template x-if="prop.Type.toLowerCase() === 'select'">
                                                    <select @change="itemChange" :disabled="isDisabled()" x-model="model.Properties[prop.Id]" x-init="selectFirstIfNull(prop)">
                                                        <template x-for="opt in prop.Options">
                                                            <option :value="opt.Value" x-text="opt.Label" :selected="opt.Value === model.Properties[prop.Id]"></option>
                                                        </template>
                                                    </select>
                                                </template>
                                                <template x-if="prop.Type.toLowerCase() === 'bool'">
                                                    <label x:for="$id('toggle')" class="toggle-switchy">
                                                        <input @change="itemChange" :disabled="isDisabled()" type="checkbox" :id="$id('toggle')" x-model="model.Properties[prop.Id]"  @keydown.enter="save" />
                                                        <span class="toggle">
                                                            <span class="switch"></span>
                                                        </span>
                                                    </label>
                                                </template>
                                                <template x-if="prop.Help">
                                                    <span class="help-text" x-html="getHtml(prop.Help)"></span>
                                                </template>
                                            </span>
                                        </div> 
                                    </template>
                                </template>

                                <template x-if="EditorApp.TestFunction">
                                    <div class="setting tester">
                                        <span class="label"></span>
                                        <span class="value">                    
                                            <button :disabled="isDisabled()" class="btn" @click="testApp" x-text="testing ? 'Testing' : 'Test'"></button>
                                        </span>
                                    </div>
                                </template>

                            </div>
                        </template>

                        <template x-if="model._Type !== 'Dashboard' && (model._Type !== 'DashboardTerminal' || model.TerminalType === 'SSH')">
                            <div :class="{ 'tabpage': true, 'active': activeTab === 'SSH'}">     
                                <p>By configuring SSH for this item, this will allow you to terminal into the item.
                                    
                                   If username or password is blank, you will be prompted for this information.</p>                                                                                                                
                                <div class="setting">
                                    <span class="label">Address</span>
                                    <span class="value">
                                        <input :disabled="isDisabled()" type="text" x-model="model.SshServer" @blur="blur" @input="input"  @keydown.enter="save" placeholder="1.2.3.4" />
                                        <span class="help-text">Optional address for connecting to a SSH terminal.</span>
                                    </span>
                                </div>           
                                <div class="setting">
                                    <span class="label">Username</span>
                                    <span class="value">
                                        <input :disabled="isDisabled()" type="text" x-model="model.SshUsername" @blur="blur" @input="input"  @keydown.enter="save" placeholder="username" />
                                        <span class="help-text">Optional Username for connecting to a SSH terminal.</span>
                                    </span>
                                </div>       
                                <div class="setting">
                                    <span class="label">Password</span>
                                    <span class="value">
                                        <input :disabled="isDisabled()" type="password" x-model="model.SshPassword" @blur="blur" @input="input"  @keydown.enter="save" placeholder="password" />
                                        <span class="help-text">Optional Password for connecting to a SSH terminal.</span>
                                    </span>
                                </div> 
                            </div>
                        </template>

                        <% if(docker?.length) { %>
                        <template x-if="model._Type !== 'Dashboard' && (model._Type !== 'DashboardTerminal' || model.TerminalType === 'Docker')">
                            <div :class="{ 'tabpage': true, 'active': activeTab === 'Docker'}">
                                <p>Here you can configure Docker settings for this item, which will allow you to terminal into the docker container.

                                    Note: If SSH is configured you will not be able to connect user this Docker connection.
                                </p>                                                                                     
                                <div class="setting">
                                    <span class="label">Docker</span>
                                    <span class="value">
                                        <select :disabled="isDisabled()" x-model="model.DockerUid">
                                            <option value="">None</option>
                                            <% for(let d of docker) { %> 
                                                <option value="<%= d.Uid %>"><%= d.Name %></option>
                                            <% } %>
                                        </select>
                                        <span class="help-text">The Docker instance this connects to.</span>
                                    </span>
                                </div>         
                                <template x-if="model.DockerUid">
                                    <div class="setting">
                                        <span class="label">Name</span>
                                        <span class="value">
                                            <input :disabled="isDisabled()" type="text" x-model="model.DockerContainer" @blur="blur" @input="input" @keydown.enter="save" />
                                            <span class="help-text">The name of the Docker container to connect to</span>
                                        </span>
                                    </div>           
                                </template>
                                <template x-if="model.DockerUid">
                                    <div class="setting">
                                        <span class="label">Command</span>
                                        <span class="value">
                                            <select :disabled="isDisabled()" x-model="model.DockerCommand">
                                                <option value="/bin/ash">/bin/ash</option>
                                                <option value="/bin/bash">/bin/bash</option>
                                                <option value="/bin/sh">/bin/sh</option>
                                            </select>
                                            <span class="help-text">The command to connect to.</span>
                                        </span>
                                    </div>       
                                </template>   
                            </div>
                        </template>
                        <% } %>

                        <template x-if="EditorApp.Info != null">
                            <div :class="{ 'tabpage': true, 'active': activeTab === 'Info'}">
                                <template x-if="EditorApp.Info?.Authors">
                                    <div class="setting">
                                        <span class="label" x-text="EditorApp.Info?.Authors && EditorApp.Info?.Authors?.length === 1 ? 'Author' : 'Authors'"></span>
                                        <span class="value" x-text="EditorApp.Info?.Authors?.join(', ')"></span>
                                    </div>
                                </template>
                                <template x-if="EditorApp.Info?.AppUrl">
                                    <div class="setting">
                                        <span class="label">Application URL</span>
                                        <span class="value">
                                            <a :href="EditorApp.Info?.AppUrl" x-text="EditorApp.Info?.AppUrl" target="_blank" rel="noreferrer"></a>
                                        </span>
                                    </div>
                                </template>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </div>
    </template>
    <%- include('./info-dialog.ejs') %>
</div>